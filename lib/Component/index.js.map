{"version":3,"sources":["../../src/Component/index.js"],"names":["onBlur","_event","_data","state","theme","palette","type","Slate","componentDidMount","selection","window","getSelection","updateToolbar","shouldComponentUpdate","nextProps","editorState","props","toolbar","focused","readOnly","componentDidUpdate","onStateChange","value","onChange","handleOpen","isBlurred","isCollapsed","pos","left","top","width","style","opacity","scrollY","offsetHeight","scrollX","offsetWidth","onPaste","e","data","isShift","serializer","deserialize","html","document","change","insertFragment","plugins","onKeyDown","HoverButtons","ToolbarButtons","focus","isOpened","isExpanded","isFocused","padding","Boolean","placeholder","Component"],"mappings":"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","file":"index.js","sourcesContent":["/*\r\n * This file is part of ORY Editor.\r\n *\r\n * ORY Editor is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * ORY Editor is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * @license LGPL-3.0\r\n * @copyright 2016-2018 Aeneas Rekkas\r\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\r\n *\r\n */\r\n\r\n/* eslint-disable no-alert, prefer-reflect, no-underscore-dangle */\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport React, { Component } from 'react'\r\nimport { Portal } from 'react-portal'\r\nimport position from 'selection-position'\r\nimport { Editor } from 'slate-react'\r\nimport { BottomToolbar, ThemeProvider } from 'ory-editor-ui'\r\nimport { placeholder } from '../const'\r\n\r\nimport { html as serializer } from '../hooks.js'\r\n\r\nconst onBlur = (_event, _data, state) => state\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  }\r\n})\r\n\r\nclass Slate extends Component {\r\n  componentDidMount = () => {\r\n    this.selection = window.getSelection()\r\n    this.updateToolbar()\r\n  }\r\n\r\n  shouldComponentUpdate = nextProps =>\r\n    nextProps.state.editorState !== this.props.state.editorState ||\r\n    nextProps.state.toolbar !== this.props.state.toolbar ||\r\n    nextProps.focused !== this.props.focused ||\r\n    nextProps.readOnly !== this.props.readOnly\r\n\r\n  componentDidUpdate = () => this.updateToolbar()\r\n\r\n  onStateChange = ({ value }) => {\r\n    this.props.onChange({ editorState: value })\r\n  }\r\n\r\n  handleOpen = portal => {\r\n    // this.toolbar = portal.firstChild\r\n  }\r\n\r\n  updateToolbar = () => {\r\n    const { editorState } = this.props.state\r\n    const toolbar = this.toolbar\r\n\r\n    if (\r\n      !toolbar ||\r\n      editorState.isBlurred ||\r\n      editorState.selection.isCollapsed\r\n    ) {\r\n      return\r\n    }\r\n    const pos = position()\r\n    if (pos) {\r\n      const { left, top, width } = position()\r\n\r\n      toolbar.style.opacity = 1\r\n      toolbar.style.top = `${top + window.scrollY - toolbar.offsetHeight}px`\r\n      toolbar.style.left = `${left +\r\n        window.scrollX -\r\n        toolbar.offsetWidth / 2 +\r\n        width / 2}px`\r\n    }\r\n  }\r\n\r\n  onPaste = (e, data, state) => {\r\n    if (data.type !== 'html') return\r\n    if (data.isShift) return\r\n\r\n    const { document } = serializer.deserialize(data.html)\r\n\r\n    return state.change().insertFragment(document)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      focused,\r\n      readOnly,\r\n      state: { editorState },\r\n      plugins,\r\n      onKeyDown,\r\n      HoverButtons,\r\n      ToolbarButtons,\r\n      focus\r\n    } = this.props\r\n    const isOpened = editorState.selection.isExpanded && editorState.isFocused\r\n\r\n    return (\r\n      <div>\r\n        <Portal onOpen={this.handleOpen}>\r\n          {/* ory-prevent-blur is required to prevent global blurring */}\r\n          <ThemeProvider theme={theme}>\r\n            <div\r\n              className={\r\n                'ory-prevent-blur ory-plugins-content-slate-inline-toolbar ' +\r\n                (isOpened\r\n                  ? ''\r\n                  : 'ory-plugins-content-slate-inline-toolbar--hidden')\r\n              }\r\n              style={{ padding: 0 }}\r\n              ref={toolbar => {\r\n                this.toolbar = toolbar\r\n                toolbar && this.updateToolbar()\r\n              }}\r\n            >\r\n              <HoverButtons\r\n                editorState={editorState}\r\n                onChange={this.onStateChange}\r\n                focus={focus}\r\n              />\r\n            </div>\r\n          </ThemeProvider>\r\n        </Portal>\r\n        <Editor\r\n          onChange={this.onStateChange}\r\n          onKeyDown={onKeyDown}\r\n          readOnly={Boolean(readOnly)}\r\n          className=\"ory-plugins-content-slate-container\"\r\n          onBlur={onBlur}\r\n          value={editorState}\r\n          plugins={plugins}\r\n          onPaste={this.onPaste}\r\n          placeholder={placeholder}\r\n        />\r\n        {readOnly ? null : (\r\n          <BottomToolbar open={focused}>\r\n            <ToolbarButtons\r\n              editorState={editorState}\r\n              onChange={this.onStateChange}\r\n              focus={focus}\r\n            />\r\n          </BottomToolbar>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Slate\r\n"]}