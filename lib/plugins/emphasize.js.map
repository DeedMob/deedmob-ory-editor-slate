{"version":3,"sources":["../../src/plugins/emphasize.js"],"names":["STRONG","EM","U","createButton","type","icon","editorState","onChange","onClick","e","preventDefault","value","change","toggleMark","isActive","activeMarks","some","mark","EmphasizePlugin","name","schema","marks","onKeyDown","data","state","isMod","key","hoverButtons","deserialize","el","next","tagName","toLowerCase","object","nodes","childNodes","serialize","children","renderMark","props","attributes","Plugin"],"mappings":"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","file":"emphasize.js","sourcesContent":["/*\r\n * This file is part of ORY Editor.\r\n *\r\n * ORY Editor is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * ORY Editor is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * @license LGPL-3.0\r\n * @copyright 2016-2018 Aeneas Rekkas\r\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\r\n *\r\n */\r\n\r\n/* eslint-disable prefer-reflect, default-case, react/display-name */\r\nimport React from 'react'\r\nimport BoldIcon from '@material-ui/icons/FormatBold'\r\nimport ItalicIcon from '@material-ui/icons/FormatItalic'\r\nimport UnderlinedIcon from '@material-ui/icons/FormatUnderlined'\r\nimport { makeTagMark, ToolbarButton } from '../helpers'\r\nimport Plugin from './Plugin'\r\nimport type { Props } from './props'\r\n\r\nexport const STRONG = 'EMPHASIZE/STRONG'\r\nexport const EM = 'EMPHASIZE/EM'\r\nexport const U = 'EMPHASIZE/U'\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst createButton = (type, icon) => ({ editorState, onChange }: Props) => {\r\n  const onClick = e => {\r\n    e.preventDefault()\r\n    onChange({\r\n      value: editorState.change().toggleMark(type).value\r\n    })\r\n  }\r\n\r\n  const isActive =\r\n    editorState && editorState.activeMarks.some(mark => mark.type === type)\r\n\r\n  return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\r\n}\r\n\r\nexport default class EmphasizePlugin extends Plugin {\r\n  props: Props\r\n\r\n  name = 'emphasize'\r\n\r\n  schema = {\r\n    marks: {\r\n      [STRONG]: makeTagMark('strong'),\r\n      [EM]: makeTagMark('em'),\r\n      [U]: makeTagMark('u')\r\n    }\r\n  }\r\n\r\n  onKeyDown = (e: Event, data: { key: string, isMod: boolean }, state) => {\r\n    if (data.isMod) {\r\n      let mark\r\n\r\n      switch (data.key) {\r\n        case 'b':\r\n          mark = STRONG\r\n          break\r\n        case 'i':\r\n          mark = EM\r\n          break\r\n        case 'u':\r\n          mark = U\r\n          break\r\n        default:\r\n          return\r\n      }\r\n\r\n      return state.change().toggleMark(mark).value\r\n    }\r\n  }\r\n\r\n  hoverButtons = [\r\n    createButton(STRONG, <BoldIcon />),\r\n    createButton(EM, <ItalicIcon />),\r\n    createButton(U, <UnderlinedIcon />)\r\n  ]\r\n\r\n  deserialize = (el, next) => {\r\n    switch (el.tagName.toLowerCase()) {\r\n      case 'strong':\r\n      case 'b':\r\n        return {\r\n          object: 'mark',\r\n          type: STRONG,\r\n          nodes: next(el.childNodes)\r\n        }\r\n      case 'em':\r\n      case 'i':\r\n        return {\r\n          object: 'mark',\r\n          type: EM,\r\n          nodes: next(el.childNodes)\r\n        }\r\n      case 'u':\r\n        return {\r\n          object: 'mark',\r\n          type: U,\r\n          nodes: next(el.childNodes)\r\n        }\r\n    }\r\n  }\r\n\r\n  serialize = (object: { type: string, object: string }, children: any[]) => {\r\n    if (object.object !== 'mark') {\r\n      return\r\n    }\r\n    switch (object.type) {\r\n      case STRONG:\r\n        return <strong>{children}</strong>\r\n      case EM:\r\n        return <em>{children}</em>\r\n      case U:\r\n        return <u>{children}</u>\r\n    }\r\n  }\r\n\r\n  renderMark = props => {\r\n    const { children, mark, attributes } = props\r\n\r\n    switch (mark.type) {\r\n      case STRONG:\r\n        return <strong {...attributes}>{children}</strong>\r\n      case EM:\r\n        return <em {...attributes}>{children}</em>\r\n      case U:\r\n        return <u {...attributes}>{children}</u>\r\n    }\r\n  }\r\n}\r\n"]}