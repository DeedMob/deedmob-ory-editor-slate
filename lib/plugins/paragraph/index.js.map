{"version":3,"sources":["../../../src/plugins/paragraph/index.js"],"names":["P","ParagraphPlugin","name","schema","nodes","Paragraph","deserialize","el","next","tagName","toLowerCase","object","type","childNodes","serialize","children","textAlign","data","get","renderNode","props","node","Plugin"],"mappings":";;;;;;;AAwBA;;;;AACA;;;;AACA;;;;;;;;;;;;+eA1BA;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;AAKO,IAAMA,gBAAI,qBAAV;;IAEcC,e;;;;;;;;;;;;;;wMACnBC,I,GAAO,W,QAEPC,M,GAAS;AACPC,iCAAUJ,CAAV,EAAcK,cAAd;AADO,K,QAITC,W,GAAc,UAACC,EAAD,EAAUC,IAAV,EAAwB;AACpC,cAAQD,GAAGE,OAAH,CAAWC,WAAX,EAAR;AACE,aAAK,GAAL;AACE,iBAAO;AACLC,oBAAQ,OADH;AAELC,kBAAMZ,CAFD;AAGLI,mBAAOI,KAAKD,GAAGM,UAAR;AACP;AAJK,WAAP;AAFJ;AASD,K,QAEDC,S,GAAY,UACVH,MADU,EAEVI,QAFU,EAGP;AACH,UAAIJ,OAAOA,MAAP,KAAkB,OAAtB,EAA+B;AAC7B;AACD;AACD,cAAQA,OAAOC,IAAf;AACE,aAAKZ,CAAL;AACE,iBAAO;AAAA;AAAA,cAAG,OAAO,EAAEgB,WAAWL,OAAOM,IAAP,CAAYC,GAAZ,CAAgB,OAAhB,CAAb,EAAV;AAAoDH;AAApD,WAAP;AAFJ;AAID,K,QAEDI,U,GAAa,UAACC,KAAD,EAAgB;AAC3B,cAAQA,MAAMC,IAAN,CAAWT,IAAnB;AACE,aAAKZ,CAAL;AAAQ;AACN,mBAAO,8BAAC,cAAD,EAAeoB,KAAf,CAAP;AACD;AAHH;AAKD,K;;;;EAtC0CE,gB;;kBAAxBrB,e","file":"index.js","sourcesContent":["/*\r\n * This file is part of ORY Editor.\r\n *\r\n * ORY Editor is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *  \r\n * ORY Editor is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *  \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * @license LGPL-3.0\r\n * @copyright 2016-2018 Aeneas Rekkas\r\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\r\n *\r\n */\r\n\r\n// @flow\r\n/* eslint-disable prefer-reflect, default-case, react/display-name */\r\nimport React from 'react'\r\nimport Plugin from '../Plugin'\r\nimport Paragraph from './node'\r\n\r\nexport const P = 'PARAGRAPH/PARAGRAPH'\r\n\r\nexport default class ParagraphPlugin extends Plugin {\r\n  name = 'paragraph'\r\n\r\n  schema = {\r\n    nodes: { [P]: Paragraph }\r\n  }\r\n\r\n  deserialize = (el: any, next: any) => {\r\n    switch (el.tagName.toLowerCase()) {\r\n      case 'p':\r\n        return {\r\n          object: 'block',\r\n          type: P,\r\n          nodes: next(el.childNodes)\r\n          // data: Data.create({ textAlign: el.attr('styles')['text-align'] })\r\n        }\r\n    }\r\n  }\r\n\r\n  serialize = (\r\n    object: { type: string, object: string, data: any },\r\n    children: any[]\r\n  ) => {\r\n    if (object.object !== 'block') {\r\n      return\r\n    }\r\n    switch (object.type) {\r\n      case P:\r\n        return <p style={{ textAlign: object.data.get('align') }}>{children}</p>\r\n    }\r\n  }\r\n\r\n  renderNode = (props: any) => {\r\n    switch (props.node.type) {\r\n      case P: {\r\n        return <Paragraph {...props} />\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}