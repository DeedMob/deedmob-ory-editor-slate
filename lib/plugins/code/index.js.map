{"version":3,"sources":["../../../src/plugins/code/index.js"],"names":["CODE","CodePlugin","props","DEFAULT_NODE","Plugin","createButton","type","icon","Button","editorState","onChange","onClick","e","preventDefault","value","change","toggleMark","isActive","marks","some","mark","createNodeButton","blocks","block","setBlocks","name","schema","nodes","Code","hoverButtons","toolbarButtons","deserialize","el","next","tagName","toLowerCase","object","data","Data","create","childNodes","serialize","children","overflow","renderMark","attributes","renderNode","node"],"mappings":"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","file":"index.js","sourcesContent":["/*\r\n * This file is part of ORY Editor.\r\n *\r\n * ORY Editor is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * ORY Editor is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * @license LGPL-3.0\r\n * @copyright 2016-2018 Aeneas Rekkas\r\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\r\n *\r\n */\r\n\r\n/* eslint-disable prefer-reflect, default-case, react/display-name */\r\nimport React from 'react'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\nimport { Data } from 'slate'\r\nimport { makeTagMark, ToolbarButton } from '../../helpers'\r\nimport Plugin from '../Plugin'\r\nimport Code from './node'\r\nimport type { Props } from '../props'\r\n\r\nexport const CODE = 'CODE/CODE'\r\n\r\nexport default class CodePlugin extends Plugin {\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.DEFAULT_NODE = props.DEFAULT_NODE\r\n  }\r\n\r\n  props: Props\r\n\r\n  createButton = (type, icon) => {\r\n    const Button = ({ editorState, onChange }: Props) => {\r\n      const onClick = e => {\r\n        e.preventDefault()\r\n\r\n        onChange({\r\n          value: editorState\r\n            .change()\r\n            .toggleMark(type)\r\n            .value\r\n        })\r\n      }\r\n\r\n      const isActive =\r\n        editorState && editorState.marks.some(mark => mark.type === type)\r\n\r\n      return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\r\n    }\r\n\r\n    return Button\r\n  }\r\n\r\n  createNodeButton = (type, icon) => {\r\n    const Button = ({ editorState, onChange }: Props) => {\r\n      const onClick = e => {\r\n        e.preventDefault()\r\n\r\n        const isActive = editorState.blocks.some(block => block.type === type)\r\n\r\n        onChange({\r\n          value: editorState\r\n            .change()\r\n            .setBlocks(isActive ? this.DEFAULT_NODE : type)\r\n            .value\r\n        })\r\n      }\r\n\r\n      const isActive = editorState.blocks.some(block => block.type === type)\r\n\r\n      return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\r\n    }\r\n\r\n    return Button\r\n  }\r\n\r\n  name = 'code'\r\n  schema = {\r\n    marks: { [CODE]: makeTagMark('code') },\r\n    nodes: { [CODE]: Code }\r\n  }\r\n\r\n  hoverButtons = [this.createButton(CODE, <CodeIcon />)]\r\n  toolbarButtons = [this.createNodeButton(CODE, <CodeIcon />)]\r\n\r\n  deserialize = (el, next) => {\r\n    switch (el.tagName.toLowerCase()) {\r\n      case 'code':\r\n        return {\r\n          object: 'mark',\r\n          type: CODE,\r\n          data: Data.create({}),\r\n          nodes: next(el.childNodes)\r\n        }\r\n      case 'pre':\r\n        return {\r\n          object: 'block',\r\n          type: CODE,\r\n          nodes: next(el.childNodes)\r\n        }\r\n    }\r\n  }\r\n\r\n  serialize = (\r\n    object: { type: string, object: string, data: any },\r\n    children: any[]\r\n  ) => {\r\n    if (object.object === 'mark') {\r\n      switch (object.type) {\r\n        case CODE:\r\n          return <code className=\"ory-plugins-content-slate-code\">{children}</code>\r\n      }\r\n    } else if (object.object === 'block') {\r\n      switch (object.type) {\r\n        case CODE:\r\n          return (\r\n            <pre style={{ overflow: 'scroll' }}>\r\n              <code>{children}</code>\r\n            </pre>\r\n          )\r\n      }\r\n    }\r\n  }\r\n\r\n  renderMark = props => {\r\n    const { children, mark, attributes } = props\r\n\r\n    switch (mark.type) {\r\n      case CODE:\r\n        return <code {...attributes} className=\"ory-plugins-content-slate-code\">{children}</code>\r\n    }\r\n  }\r\n\r\n  renderNode = props => {\r\n    const { node } = props\r\n\r\n    switch (node.type) {\r\n      case CODE:\r\n        return <Code {...props}/>\r\n    }\r\n  }\r\n}\r\n"]}