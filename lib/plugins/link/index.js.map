{"version":3,"sources":["../../../src/plugins/link/index.js"],"names":["A","LinkButton","state","open","href","title","hadLinks","onRef","component","e","querySelector","focus","onClick","props","editorState","onChange","preventDefault","hasLinks","inlines","some","inline","type","newState","change","unwrapInline","value","selection","isExpanded","setState","wasExpanded","handleClose","window","setTimeout","handleSubmit","wrapInline","data","collapseToEnd","insertText","extend","length","onHrefChange","target","onTitleChange","actions","Component","LinkPlugin","name","schema","nodes","Link","hoverButtons","toolbarButtons","deserialize","el","next","tagName","toLowerCase","object","childNodes","Data","create","attrs","find","serialize","children","get","renderNode","node","Plugin"],"mappings":"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","file":"index.js","sourcesContent":["/*\r\n * This file is part of ORY Editor.\r\n *\r\n * ORY Editor is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * ORY Editor is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * @license LGPL-3.0\r\n * @copyright 2016-2018 Aeneas Rekkas\r\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\r\n *\r\n */\r\n\r\n/* eslint-disable no-alert, prefer-reflect, default-case, react/display-name */\r\nimport LinkIcon from '@material-ui/icons/Link'\r\nimport React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { ToolbarButton } from '../../helpers'\r\nimport Plugin from '../Plugin'\r\nimport Link from './node'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Data } from 'slate'\r\nimport type { Props } from '../props'\r\nimport ThemeProvider from 'ory-editor-ui/lib/ThemeProvider'\r\n\r\nexport const A = 'LINK/LINK'\r\n\r\nclass LinkButton extends Component {\r\n  state = {\r\n    open: false,\r\n    href: '',\r\n    title: '',\r\n    hadLinks: false\r\n  }\r\n\r\n  props: Props\r\n\r\n  input: Component<*, *, *>\r\n\r\n  onRef = (component: Component<*, *, *>) => {\r\n    if (!component && true) {\r\n      return null\r\n    }\r\n\r\n    const e = component.querySelector('input')\r\n    if (e) {\r\n      e.focus()\r\n    }\r\n  }\r\n\r\n  onClick = e => {\r\n    const { editorState, onChange } = this.props\r\n    e.preventDefault()\r\n\r\n    const hasLinks = editorState.inlines.some(\r\n      (inline: any) => inline.type === A\r\n    )\r\n\r\n    if (hasLinks) {\r\n      const newState = editorState\r\n        .change()\r\n        .unwrapInline(A)\r\n        .value\r\n      onChange({ value: newState })\r\n    } else if (editorState.selection.isExpanded) {\r\n      this.setState({\r\n        open: true,\r\n        wasExpanded: editorState.selection.isExpanded,\r\n        href: '',\r\n        title: '',\r\n        hadLinks: hasLinks\r\n      })\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n        wasExpanded: editorState.selection.isExpanded,\r\n        href: '',\r\n        title: '',\r\n        hadLinks: hasLinks\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n\r\n    const newState = this.props.editorState\r\n      .change()\r\n      .focus()\r\n      .value\r\n    window.setTimeout(() => this.props.onChange({ value: newState }), 1)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.setState({ open: false })\r\n\r\n    if (!this.state.href) {\r\n      this.handleClose()\r\n      return\r\n    }\r\n\r\n    if (this.state.wasExpanded) {\r\n      const newState = this.props.editorState\r\n        .change()\r\n        .focus()\r\n        .wrapInline({\r\n          type: A,\r\n          data: { href: this.state.href }\r\n        })\r\n        .collapseToEnd()\r\n        .value\r\n\r\n      window.setTimeout(() => this.props.onChange({ value: newState }), 1)\r\n      window.setTimeout(() => this.props.focus(), 100)\r\n      return\r\n    }\r\n\r\n    if (!this.state.title) {\r\n      this.handleClose()\r\n      return\r\n    }\r\n\r\n    const newState = this.props.editorState\r\n      .change()\r\n      .insertText(this.state.title)\r\n      .extend(-this.state.title.length)\r\n      .wrapInline({\r\n        type: A,\r\n        data: { href: this.state.href }\r\n      })\r\n      .collapseToEnd()\r\n      .focus()\r\n      .value\r\n\r\n    this.props.onChange({ value: newState })\r\n    window.setTimeout(() => this.props.focus(), 100)\r\n  }\r\n\r\n  onHrefChange = e => {\r\n    this.setState({ href: e.target.value })\r\n  }\r\n\r\n  onTitleChange = e => {\r\n    this.setState({ title: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    const actions = <React.Fragment>\r\n      <Button\r\n        variant='flat'\r\n        label=\"Cancel\"\r\n        color=\"primary\"\r\n        onClick={this.handleClose}\r\n      >\r\n        Cancel\r\n      </Button>\r\n      <Button\r\n        variant='flat'\r\n        label=\"Ok\"\r\n        color=\"primary\"\r\n        onClick={this.handleSubmit}\r\n      >\r\n        Ok\r\n      </Button>\r\n    </React.Fragment>\r\n    const { editorState } = this.props\r\n\r\n    const hasLinks = editorState.inlines.some(\r\n      (inline: any) => inline.type === A\r\n    )\r\n    return (\r\n      <ThemeProvider>\r\n        <span>\r\n          <ToolbarButton\r\n            onClick={this.onClick}\r\n            isActive={hasLinks}\r\n            icon={<LinkIcon />}\r\n          />\r\n          <span>\r\n            <Dialog\r\n              className=\"ory-prevent-blur\"\r\n              title=\"Create a link\"\r\n              // modal={false}\r\n              open={this.state.open}\r\n              actions={[actions]}\r\n            >\r\n              <DialogTitle id=\"confirmation-dialog-title\">\r\n                Create a link\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                {this.state.wasExpanded ? null : (\r\n                  <div>\r\n                    <TextField\r\n                      placeholder=\"Link title\"\r\n                      onChange={this.onTitleChange}\r\n                      value={this.state.title}\r\n                    />\r\n                  </div>\r\n                )}\r\n                <div ref={this.onRef}>\r\n                  <TextField\r\n                    placeholder=\"http://example.com/my/link.html\"\r\n                    onChange={this.onHrefChange}\r\n                    value={this.state.href}\r\n                  />\r\n                </div>\r\n              </DialogContent>\r\n              <DialogActions>{actions}</DialogActions>\r\n            </Dialog>\r\n          </span>\r\n        </span>\r\n      </ThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class LinkPlugin extends Plugin {\r\n  name = 'link'\r\n\r\n  schema = {\r\n    nodes: { [A]: Link }\r\n  }\r\n\r\n  hoverButtons = [LinkButton]\r\n  toolbarButtons = [LinkButton]\r\n\r\n  deserialize = (el, next) => {\r\n    switch (el.tagName.toLowerCase()) {\r\n      case 'a':\r\n        return {\r\n          object: 'inline',\r\n          type: A,\r\n          nodes: next(el.childNodes),\r\n          data: Data.create({\r\n            href: (\r\n              el.attrs.find(({ name }) => name === 'href') || {\r\n                value: ''\r\n              }\r\n            ).value\r\n          })\r\n        }\r\n    }\r\n  }\r\n\r\n  serialize = (\r\n    object: { type: string, object: string, data: any },\r\n    children: any[]\r\n  ) => {\r\n    if (object.object !== 'inline') {\r\n      return\r\n    }\r\n    switch (object.type) {\r\n      case A:\r\n        return <a href={object.data.get('href')}>{children}</a>\r\n    }\r\n  }\r\n\r\n  renderNode = props => {\r\n    switch (props.node.type) {\r\n      case A: {\r\n        return (\r\n          <Link {...props} />\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}